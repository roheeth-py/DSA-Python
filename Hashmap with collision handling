class HashMap:
    def __init__(self):
        self.MAX = 10
        self.arr = [[] for _ in range(self.MAX)]

    def get_hash(self, data):
        h = 0
        for i in data:
            h += ord(i)
        return h % self.MAX

    def __setitem__(self, key, val):
        h = self.get_hash(key)
        found = False

        for idx, element in enumerate(self.arr[h]):
            if len(element) == 2 and element[0] == key:
                self.arr[h][idx] = (key, val)
                found = True
                break
        if not found:
            self.arr[h].append((key, val))


    def __getitem__(self, key):
        h = self.get_hash(key)
        for element in self.arr[h]:
            if element[0] == key:
                return element[1]

    def show(self):
        for i in self.arr:
            if i != None:
                print(i)

    def __delitem__(self, key):
        h = self.get_hash(key)
        for idx, element in enumerate(self.arr[h]):
            if element[0] is key:
                del self.arr[h][idx]

if __name__ == "__main__":
    hashmap = HashMap()
    hashmap["march 6"] = 130
    hashmap["march 1"] = 20
    hashmap["march 17"] = 27
    hashmap["dec 19"] = 31
    hashmap.show()
    del hashmap["march 17"]
    hashmap.show()
